UnicodeEncodeError: 'latin-1' codec can't encode characters in position 0-5: ordinal not in range(256)
------------
sql: error: connection to server on socket "/var/run/postgresql/.s.PGSQL.5432" failed: FATAL:  Peer authentication failed for user "postgres"



-----------------
Traceback (most recent call last):
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3298, in raw_connection
    return self.pool.connect()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 712, in checkout
    rec = pool._do_get()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 308, in _do_get
    return self._create_connection()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 674, in __init__
    self.__connect()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 900, in __connect
    with util.safe_reraise():
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 646, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 622, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: connection to server at "localhost" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user "postgres"
connection to server at "localhost" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user "postgres"


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/bin/alembic", line 8, in <module>
    sys.exit(main())
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/config.py", line 636, in main
    CommandLine(prog=prog).main(argv=argv)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/config.py", line 626, in main
    self.run_cmd(cfg, options)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/config.py", line 603, in run_cmd
    fn(
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/command.py", line 406, in upgrade
    script.run_env()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/script/base.py", line 586, in run_env
    util.load_python_file(self.dir, "env.py")
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/util/pyfiles.py", line 95, in load_python_file
    module = load_module_py(module_id, path)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/util/pyfiles.py", line 113, in load_module_py
    spec.loader.exec_module(module)  # type: ignore
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/home/artsiom/atlantis/atlantis-fastapi/alembic/env.py", line 89, in <module>
    run_migrations_online()
  File "/home/artsiom/atlantis/atlantis-fastapi/alembic/env.py", line 77, in run_migrations_online
    with connectable.connect() as connection:
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3274, in connect
    return self._connection_cls(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 148, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2439, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3298, in raw_connection
    return self.pool.connect()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 712, in checkout
    rec = pool._do_get()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 308, in _do_get
    return self._create_connection()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 674, in __init__
    self.__connect()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 900, in __connect
    with util.safe_reraise():
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 646, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 622, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "localhost" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user "postgres"
connection to server at "localhost" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user "postgres"

(Background on this error at: https://sqlalche.me/e/20/e3q8)

--------------------------------
poetry run alembic upgrade head
Traceback (most recent call last):
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3298, in raw_connection
    return self.pool.connect()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 712, in checkout
    rec = pool._do_get()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 308, in _do_get
    return self._create_connection()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 674, in __init__
    self.__connect()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 900, in __connect
    with util.safe_reraise():
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 646, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 622, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: connection to server at "localhost" (127.0.0.1), port 5432 failed: Connection refused
	Is the server running on that host and accepting TCP/IP connections?


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/bin/alembic", line 8, in <module>
    sys.exit(main())
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/config.py", line 636, in main
    CommandLine(prog=prog).main(argv=argv)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/config.py", line 626, in main
    self.run_cmd(cfg, options)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/config.py", line 603, in run_cmd
    fn(
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/command.py", line 406, in upgrade
    script.run_env()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/script/base.py", line 586, in run_env
    util.load_python_file(self.dir, "env.py")
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/util/pyfiles.py", line 95, in load_python_file
    module = load_module_py(module_id, path)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/alembic/util/pyfiles.py", line 113, in load_module_py
    spec.loader.exec_module(module)  # type: ignore
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/home/artsiom/atlantis/atlantis-fastapi/alembic/env.py", line 89, in <module>
    run_migrations_online()
  File "/home/artsiom/atlantis/atlantis-fastapi/alembic/env.py", line 77, in run_migrations_online
    with connectable.connect() as connection:
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3274, in connect
    return self._connection_cls(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 148, in __init__
    Connection._handle_dbapi_exception_noconnection(
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2439, in _handle_dbapi_exception_noconnection
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 146, in __init__
    self._dbapi_connection = engine.raw_connection()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 3298, in raw_connection
    return self.pool.connect()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 449, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 1263, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 712, in checkout
    rec = pool._do_get()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/impl.py", line 308, in _do_get
    return self._create_connection()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
    return _ConnectionRecord(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 674, in __init__
    self.__connect()
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 900, in __connect
    with util.safe_reraise():
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/pool/base.py", line 896, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/create.py", line 646, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 622, in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)
  File "/home/artsiom/.cache/pypoetry/virtualenvs/atlantis-fastapi-yY5Yufz8-py3.10/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "localhost" (127.0.0.1), port 5432 failed: Connection refused
	Is the server running on that host and accepting TCP/IP connections?

(Background on this error at: https://sqlalche.me/e/20/e3q8)



-----------------------
resource "aws_ecs_task_definition" "ecs_task" {
  family                   = var.task_def.family
  requires_compatibilities = [for comp in var.task_def.compatibilities : comp]
  container_definitions = jsonencode([
    for name, data in var.container_vars : {
      name      = data.name
      image     = "${data.image_uri}.dkr.ecr.${data.image_region}.amazonaws.com/${data.image_folder}:${var.task_image_tag}"
      essential = data.essential
      memory    = data.memory
      command   = [for com in data.command : com]
      dependsOn = ( data.depends_on ? [{
        containerName = data.depends_cont.containerName
        condition = data.depends_cont.condition
        }] : [])
      environment = [ 
        for key, value in data.environment : {
          name  = key
          value = key == "REDIS_URL"    ? format("redis://%s:%s", var.redis_address, var.redis_port) :
        key == "SQS_URL"      ? var.sqs_url :
        key == "S3_NAME"      ? var.s3_name :
        key == "POSTGRES_URL" ? var.db_endpoint :
        value
        }
      ]
      logConfiguration = {
        logDriver = data.logs.logDriver
        options = {
          awslogs-group         = aws_cloudwatch_log_group.ecs_logs.name
          awslogs-region        = data.logs.awslogs_region
          awslogs-stream-prefix = data.logs.awslogs_stream_prefix
        }
      }
    }
  ])
}

--

rror: Invalid expression

  on main.tf line 18, in resource "aws_ecs_task_definition" "ecs_task":
  18:           value = key == "REDIS_URL"    ? format("redis://%s:%s", var.redis_address, var.redis_port) :
  19:         key == "SQS_URL"      ? var.sqs_url :

Expected the start of an expression, but found an invalid expression token.


-----

Error: Invalid expression

  on main.tf line 18, in resource "aws_ecs_task_definition" "ecs_task":
  18:           value = key == "REDIS_URL"    ? format("redis://%s:%s", var.redis_address, var.redis_port) :
  19:         key == "SQS_URL"      ? var.sqs_url :

Expected the start of an expression, but found an invalid expression token.




value = key == "REDIS_URL"    ? format("redis://%s:%s", var.redis_address, var.redis_port) :
        key == "SQS_URL"      ? var.sqs_url :
        key == "S3_NAME"      ? var.s3_name :
        key == "POSTGRES_URL" ? var.db_endpoint :
        value

resource "aws_ecs_task_definition" "ecs_task" {
  family                   = var.task_def.family
  requires_compatibilities = [for comp in var.task_def.compatibilities : comp]
  container_definitions = jsonencode([
    for name, data in var.container_vars : {
      name      = data.name
      image     = "${data.image_uri}.dkr.ecr.${data.image_region}.amazonaws.com/${data.image_folder}:${var.task_image_tag}"
      essential = data.essential
      memory    = data.memory
      command   = [for com in data.command : com]
      dependsOn = ( data.depends_on ? [{
        containerName = data.depends_cont.containerName
        condition = data.depends_cont.condition
        }] : [])
      environment = [ 
        for key, value in data.environment : {
          name  = key
          value = key == "REDIS_URL" ? "redis://${var.redis_address}:${var.redis_port}" :
                  key == "SQS_URL" ? "${var.sqs_url}" :
                  key == "S3_NAME" ? "${var.s3_name}" : 
                  key == "POSTGRES_URL" ? "${var.db_endpoint}" : 
                  value
        }
      ]
      logConfiguration = {
        logDriver = data.logs.logDriver
        options = {
          awslogs-group         = aws_cloudwatch_log_group.ecs_logs.name
          awslogs-region        = data.logs.awslogs_region
          awslogs-stream-prefix = data.logs.awslogs_stream_prefix
        }
      }
    }
  ])
}


------------------
environment = [ for key, value in data.environment : {
        name  = key
        value = key == "REDIS_URL" ? "redis://${var.redis_address}:${var.redis_port}" :
                key == "SQS_URL" ? "${var.sqs_url}" :
                key == "S3_NAME" ? "${var.s3_name}" : 
                key == "POSTGRES_URL" ? "${var.db_endpoint}" : value
        }]


Error: Invalid expression

  on main.tf line 17, in resource "aws_ecs_task_definition" "ecs_task":
  17:         value = key == "REDIS_URL" ? "redis://${var.redis_address}:${var.redis_port}" :
  18:                 (key == "SQS_URL" ? "${var.sqs_url}" :

Expected the start of an expression, but found an invalid expression token.


image     = "${data.image_uri}.dkr.ecr.${data.image_region}.amazonaws.com/${data.image_folder}:${var.task_image_tag}"

aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 890742572904.dkr.ecr.eu-central-1.amazonaws.com

docker tag devops-bot:latest 890742572904.dkr.ecr.eu-central-1.amazonaws.com/devops-bot:latest

docker push 890742572904.dkr.ecr.eu-central-1.amazonaws.com/devops-bot:latest


---------------
from aiogram import Bot, Dispatcher, types, Router
from aiogram.fsm.storage.redis import RedisStorage
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from db import async_session
from bot.middlewares.db_middleware import DatabaseSessionMiddleware
from bot.middlewares.state_middleware import PydanticStateMiddleware
from bot.schemas.user import UserStateModel
from bot.handlers.start import user_creation_router
from bot.config import config
import asyncio
import boto3
import json

# Создаем объекты бота и диспетчера
bot = Bot(token=config.BOT_TOKEN)
if config.REDIS_ENABLED and config.REDIS_URL:
    dp = Dispatcher(storage=RedisStorage.from_url(config.REDIS_URL))
    print("Redis connected")
else:
    dp = Dispatcher(storage=MemoryStorage())

dp.update.middleware(DatabaseSessionMiddleware(async_session))
dp.update.middleware(PydanticStateMiddleware(UserStateModel, state_key="user_state"))

# Настройка AWS
sqs = boto3.client("sqs", region_name="eu-central-1")
s3 = boto3.client("s3", region_name="eu-central-1")
QUEUE_URL = config.SQS_URL 
S3_BUCKET = config.S3_NAME

class PDFStates(StatesGroup):
    waiting_for_text = State()

pdf_router = Router()

@pdf_router.message(Command(commands=["generate_pdf"]))
async def cmd_generate_pdf(message: types.Message, state: FSMContext):
    await message.reply("введите текст для генерации PDF:")
    await state.set_state(PDFStates.waiting_for_text)

@pdf_router.message(PDFStates.waiting_for_text)
async def process_pdf_text(message: types.Message, state: FSMContext):
    try:
        sqs.send_message(
            QueueUrl=QUEUE_URL,
            MessageBody=json.dumps({
                "user_id": message.from_user.id,
                "text": message.text
            })
        )
        await message.reply("Используйте /showpdf для получения файла.")
    except Exception as e:
        await message.reply(f"Ошибка: {str(e)}")
    finally:
        await state.clear()

@pdf_router.message(Command(commands=["showpdf"]))
async def cmd_show_pdf(message: types.Message):
    try:
        user_id = message.from_user.id
        s3_key = f"pdfs/{user_id}.pdf"
        
        url = s3.generate_presigned_url(
            'get_object',
            Params={'Bucket': S3_BUCKET, 'Key': s3_key},
            ExpiresIn=3600
        )
        await message.reply(f"Ваш PDF: {url}")
    except Exception as e:
        await message.reply("PDF еще не готов")

# Регистрируем роутеры
dp.include_router(user_creation_router)
dp.include_router(pdf_router)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
--------------------------
resource "aws_lambda_event_source_mapping" "sqs_trigger" {
  event_source_arn = aws_sqs_queue.your_queue.arn
  function_name    = aws_lambda_function.your_lambda.arn
  enabled          = true
  batch_size       = 1  # Количество сообщений за один вызов (макс. 10)
}

------

import boto3
from fpdf import FPDF  # pip install fpdf2
import json
import os

s3 = boto3.client("s3") 
S3_BUCKET = os.getenv("S3_BUCKET")

def generate_pdf(content, filename):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)
    pdf.multi_cell(0, 10, txt=content)
    pdf.output(filename)
    return filename

def lambda_handler(event, context):
    for record in event["Records"]:
        body = json.loads(record["body"])
        user_id = body["user_id"]
        text = body["text"]
        
        pdf_filename = f"/tmp/{user_id}_document.pdf"
        generate_pdf(text, pdf_filename)
        
        s3_key = f"pdfs/{user_id}.pdf"
        s3.upload_file(pdf_filename, S3_BUCKET, s3_key)
        
    return {"statusCode": 200}

------------------------
backend_1            | Traceback (most recent call last):
backend_1            |   File "/usr/local/lib/python3.10/runpy.py", line 196, in _run_module_as_main
backend_1            |     return _run_code(code, main_globals, None,
backend_1            |   File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
backend_1            |     exec(code, run_globals)
backend_1            |   File "/api/main.py", line 39, in <module>
backend_1            |     async def cmd_generate_pdf(message: types.Message, state: FSMContext):
backend_1            |   File "/root/.cache/pypoetry/virtualenvs/devops-training-bot-cCrPfAjT-py3.10/lib/python3.10/site-packages/aiogram/dispatcher/event/telegram.py", line 138, in wrapper
backend_1            |     self.register(callback, *filters, flags=flags, **kwargs)
backend_1            |   File "/root/.cache/pypoetry/virtualenvs/devops-training-bot-cCrPfAjT-py3.10/lib/python3.10/site-packages/aiogram/dispatcher/event/telegram.py", line 68, in register
backend_1            |     raise UnsupportedKeywordArgument(
backend_1            | aiogram.exceptions.UnsupportedKeywordArgument: Passing any additional keyword arguments to the registrar method is not supported.
backend_1            | This error may be caused when you are trying to register filters like in 2.x version of this framework, if it's true just look at correspoding documentation pages.
backend_1            | Please remove the {'commands'} arguments from this call.
backend_1            | 
backend_1            | (background on this error at: https://docs.aiogram.dev/en/dev-3.x/migration_2_to_3.html#filtering-events)



resource "aws_s3_bucket_policy" "example" {
  bucket = aws_s3_bucket.example.id
  policy = data.aws_iam_policy_document.example.json
}

data "aws_iam_policy_document" "example" {
  statement {
    principals {
      type        = "AWS"
      identifiers = ["arn:aws:iam::123456789012:user/username"]
    }
    actions = [
      "s3:GetObject",
      "s3:ListBucket",
    ]
    resources = [
      aws_s3_bucket.example.arn,
      "${aws_s3_bucket.example.arn}/*",
    ]
  }
}
----------------------------------------------
Error: creating ElastiCache Subnet Group (redis_subnet_group): operation error ElastiCache: CreateCacheSubnetGroup, https response error StatusCode: 400, RequestID: bcd308c4-983e-4443-97f1-53f2d244b92e, api error InvalidParameterValue: The parameter CacheSubnetGroupName is not a valid identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.
│ 
│   with module.newversatl.aws_elasticache_subnet_group.redis_sb_gr,
│   on ../modules/newversatl/main.tf line 134, in resource "aws_elasticache_subnet_group" "redis_sb_gr":
│  134: resource "aws_elasticache_subnet_group" "redis_sb_gr" {
│ 
╵
╷
│ Error: creating S3 Bucket (telegram-bot-pdf-bucket-testing-venti) ACL: operation error S3: PutBucketAcl, https response error StatusCode: 400, RequestID: G08N8H5TN1VENKJG, HostID: rwquUJyoKcvBpdbkkeYG7EAE3+2vyPjezKterZQM7hcWt2UzBhBJX1BA7g58wkXkIzaC/0Ce8mdZ2nIIEfxsArkhE++fHwozdyPvdfXAwmo=, api error AccessControlListNotSupported: The bucket does not allow ACLs
│ 
│   with module.newversatl.aws_s3_bucket_acl.example,
│   on ../modules/newversatl/main.tf line 241, in resource "aws_s3_bucket_acl" "example":
│  241: resource "aws_s3_bucket_acl" "example" {
│ 


Error: Invalid combination of arguments
│ 
│   with module.newversatl.aws_s3_bucket_acl.pdf_bucket,
│   on ../modules/newversatl/main.tf line 159, in resource "aws_s3_bucket_acl" "pdf_bucket":
│  159: resource "aws_s3_bucket_acl" "pdf_bucket" {
│ 
│ "access_control_policy": one of `access_control_policy,acl` must be specified
╵
╷
│ Error: Invalid combination of arguments
│ 
│   with module.newversatl.aws_s3_bucket_acl.pdf_bucket,
│   on ../modules/newversatl/main.tf line 159, in resource "aws_s3_bucket_acl" "pdf_bucket":
│  159: resource "aws_s3_bucket_acl" "pdf_bucket" {
│ 
│ "acl": one of `access_control_policy,acl` must be specified


