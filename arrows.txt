backend_1            | Traceback (most recent call last):
backend_1            |   File "/usr/local/lib/python3.10/runpy.py", line 196, in _run_module_as_main
backend_1            |     return _run_code(code, main_globals, None,
backend_1            |   File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
backend_1            |     exec(code, run_globals)
backend_1            |   File "/api/main.py", line 39, in <module>
backend_1            |     async def cmd_generate_pdf(message: types.Message, state: FSMContext):
backend_1            |   File "/root/.cache/pypoetry/virtualenvs/devops-training-bot-cCrPfAjT-py3.10/lib/python3.10/site-packages/aiogram/dispatcher/event/telegram.py", line 138, in wrapper
backend_1            |     self.register(callback, *filters, flags=flags, **kwargs)
backend_1            |   File "/root/.cache/pypoetry/virtualenvs/devops-training-bot-cCrPfAjT-py3.10/lib/python3.10/site-packages/aiogram/dispatcher/event/telegram.py", line 68, in register
backend_1            |     raise UnsupportedKeywordArgument(
backend_1            | aiogram.exceptions.UnsupportedKeywordArgument: Passing any additional keyword arguments to the registrar method is not supported.
backend_1            | This error may be caused when you are trying to register filters like in 2.x version of this framework, if it's true just look at correspoding documentation pages.
backend_1            | Please remove the {'commands'} arguments from this call.
backend_1            | 
backend_1            | (background on this error at: https://docs.aiogram.dev/en/dev-3.x/migration_2_to_3.html#filtering-events)



resource "aws_s3_bucket_policy" "example" {
  bucket = aws_s3_bucket.example.id
  policy = data.aws_iam_policy_document.example.json
}

data "aws_iam_policy_document" "example" {
  statement {
    principals {
      type        = "AWS"
      identifiers = ["arn:aws:iam::123456789012:user/username"]
    }
    actions = [
      "s3:GetObject",
      "s3:ListBucket",
    ]
    resources = [
      aws_s3_bucket.example.arn,
      "${aws_s3_bucket.example.arn}/*",
    ]
  }
}
----------------------------------------------
Error: creating ElastiCache Subnet Group (redis_subnet_group): operation error ElastiCache: CreateCacheSubnetGroup, https response error StatusCode: 400, RequestID: bcd308c4-983e-4443-97f1-53f2d244b92e, api error InvalidParameterValue: The parameter CacheSubnetGroupName is not a valid identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.
│ 
│   with module.newversatl.aws_elasticache_subnet_group.redis_sb_gr,
│   on ../modules/newversatl/main.tf line 134, in resource "aws_elasticache_subnet_group" "redis_sb_gr":
│  134: resource "aws_elasticache_subnet_group" "redis_sb_gr" {
│ 
╵
╷
│ Error: creating S3 Bucket (telegram-bot-pdf-bucket-testing-venti) ACL: operation error S3: PutBucketAcl, https response error StatusCode: 400, RequestID: G08N8H5TN1VENKJG, HostID: rwquUJyoKcvBpdbkkeYG7EAE3+2vyPjezKterZQM7hcWt2UzBhBJX1BA7g58wkXkIzaC/0Ce8mdZ2nIIEfxsArkhE++fHwozdyPvdfXAwmo=, api error AccessControlListNotSupported: The bucket does not allow ACLs
│ 
│   with module.newversatl.aws_s3_bucket_acl.example,
│   on ../modules/newversatl/main.tf line 241, in resource "aws_s3_bucket_acl" "example":
│  241: resource "aws_s3_bucket_acl" "example" {
│ 


Error: Invalid combination of arguments
│ 
│   with module.newversatl.aws_s3_bucket_acl.pdf_bucket,
│   on ../modules/newversatl/main.tf line 159, in resource "aws_s3_bucket_acl" "pdf_bucket":
│  159: resource "aws_s3_bucket_acl" "pdf_bucket" {
│ 
│ "access_control_policy": one of `access_control_policy,acl` must be specified
╵
╷
│ Error: Invalid combination of arguments
│ 
│   with module.newversatl.aws_s3_bucket_acl.pdf_bucket,
│   on ../modules/newversatl/main.tf line 159, in resource "aws_s3_bucket_acl" "pdf_bucket":
│  159: resource "aws_s3_bucket_acl" "pdf_bucket" {
│ 
│ "acl": one of `access_control_policy,acl` must be specified


