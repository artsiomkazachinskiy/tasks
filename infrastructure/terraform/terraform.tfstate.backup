{
  "version": 4,
  "terraform_version": "1.11.1",
  "serial": 21,
  "lineage": "166ea393-7933-f58d-39e4-639b4a5db330",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus_stack",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.83.0",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1750256646,
                "last_deployed": 1750256646,
                "name": "prometheus",
                "namespace": "monitoring",
                "notes": "kube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace monitoring get pods -l \"release=prometheus\"\n\nGet Grafana 'admin' user password by running:\n\n  kubectl --namespace monitoring get secrets prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 -d ; echo\n\nAccess Grafana local instance:\n\n  export POD_NAME=$(kubectl --namespace monitoring get pod -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -oname)\n  kubectl --namespace monitoring port-forward $POD_NAME 3000\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace monitoring $POD_NAME 9100\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.monitoring.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace monitoring prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.monitoring.svc.cluster.local\n\n   If you bind grafana to 80, please update values in values.yaml and reinstall:\n   ```\n   securityContext:\n     runAsUser: 0\n     runAsGroup: 0\n     fsGroup: 0\n\n   command:\n   - \"setcap\"\n   - \"'cap_net_bind_service=+ep'\"\n   - \"/usr/sbin/grafana-server \u0026\u0026\"\n   - \"sh\"\n   - \"/run.sh\"\n   ```\n   Details refer to https://grafana.com/docs/installation/configuration/#http-port.\n   Or grafana would always crash.\n\n   From outside the cluster, the server URL(s) are:\n     http://grafana.local\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n",
                "revision": 1,
                "values": "{\"grafana\":{\"enabled\":true,\"ingress\":{\"enabled\":true,\"hosts\":[\"grafana.local\"],\"ingressClassName\":\"nginx\"}},\"prometheus\":{\"prometheusSpec\":{\"serviceMonitorSelectorNilUsesHelmValues\":false}}}",
                "version": "75.3.0"
              }
            ],
            "name": "prometheus",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "grafana.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "grafana.ingress.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "grafana.ingress.hosts[0]",
                "type": "",
                "value": "grafana.local"
              },
              {
                "name": "grafana.ingress.ingressClassName",
                "type": "",
                "value": "nginx"
              },
              {
                "name": "grafana.sidecar.dashboards.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "grafana.sidecar.dashboards.label",
                "type": "",
                "value": "grafana_dashboard"
              },
              {
                "name": "grafana.sidecar.dashboards.labelValue",
                "type": "",
                "value": "true"
              },
              {
                "name": "grafana.sidecar.dashboards.provider",
                "type": "",
                "value": "true"
              },
              {
                "name": "grafana.sidecar.dashboards.searchNamespace",
                "type": "",
                "value": "monitoring"
              },
              {
                "name": "prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues",
                "type": "",
                "value": "false"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "75.3.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
