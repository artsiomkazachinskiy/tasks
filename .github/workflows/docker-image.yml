name: Docker Build and Versioning

on:
  push:
    branches: [ "master" ]
    paths:
      - 'app/docker/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Get last tag
        id: get-tag
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 --match "v*.*.*" 2>/dev/null || echo "v0.0.0")
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump-version
        run: |    
          LAST_TAG_VALUE="${{ steps.get-tag.outputs.last_tag }}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "${LAST_TAG_VALUE#v}"
          NEW_PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$NEW_PATCH"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push with version tag
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/mytestapp:${{ steps.bump-version.outputs.new_tag }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/mytestapp:latest

      - name: Create Git tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag ${{ steps.bump-version.outputs.new_tag }}
          git push origin ${{ steps.bump-version.outputs.new_tag }}
