replicaCount: 2

image:
  repository: artsiomkazachinskiy/prometheus-app
  tag: latest
  pullPolicy: Always

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: prometheus-app.local
      paths:
        - path: /
          pathType: Prefix

configMap:
  enabled: true
  data:
    LOG_LEVEL: "info"
    METRICS_PORT: "8080"

secrets:
  enabled: true
  data:
    API_KEY: ""  # Will be base64 encoded

healthChecks:
  livenessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    enabled: true
    path: /ready
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

prometheus:
  enabled: true
  scrapeInterval: 15s
  port: 8080
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

deployment:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

imagePullSecrets: [] 